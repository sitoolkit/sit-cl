<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The Basics -->
  <artifactId>sit-csvloader-core</artifactId>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.7</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.24</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.200</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <parent>
    <groupId>io.sitoolkit.csv</groupId>
    <artifactId>sit-csvloader</artifactId>
    <version>0.9</version>
    <relativePath>../</relativePath>
  </parent>

  <properties>
    <jdbc.password>sa</jdbc.password>
    <jdbc.url>jdbc:h2:mem:test</jdbc.url>
    <jdbc.user>sa</jdbc.user>
  </properties>


  <!-- Build Settings -->
  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.34.1</version>
          <executions>
            <execution>
              <id>start</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>stop</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- Environment Settings -->
  <profiles>
    <profile>
      <id>postgres</id>

      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>42.2.18</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <properties>
        <jdbc.password>postgres</jdbc.password>
        <jdbc.url>jdbc:postgresql://localhost:15432/postgres</jdbc.url>
        <jdbc.user>postgres</jdbc.user>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>postgres</name>
                  <run>
                    <env>
                      <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                      <TZ>Asia/Tokyo</TZ>
                    </env>
                    <ports>
                      <port>15432:5432</port>
                    </ports>
                    <wait>
                      <time>5000</time>
                      <log>.*database system is ready to accept connections$</log>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mysql</id>

      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>8.0.22</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <properties>
        <jdbc.password>root</jdbc.password>
        <jdbc.url>jdbc:mysql://localhost:13306/mysql?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;allowMultiQueries=true</jdbc.url>
        <jdbc.user>root</jdbc.user>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>mysql</name>
                  <run>
                    <env>
                      <MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
                      <TZ>Asia/Tokyo</TZ>
                    </env>
                    <ports>
                      <port>13306:3306</port>
                    </ports>
                    <wait>
                      <time>30000</time>
                      <!-- this make the thread wait only about 10 ms -->
                      <!-- <tcp>
                        <mode>mapped</mode>
                        <host>localhost</host>
                        <ports>
                          <port>3306</port>
                        </ports>
                      </tcp> -->
                      <log>.*/usr/sbin/mysqld: ready for connections.*port: 3306.*</log>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>